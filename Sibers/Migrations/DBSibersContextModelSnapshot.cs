// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sibers.DbStuff;

namespace Sibers.Migrations
{
    [DbContext(typeof(DBSibersContext))]
    partial class DBSibersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sibers.DbStuff.Models.CustomerCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CustomerCompanies");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Company")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeOfCreation")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.EmployeeProject", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("EmployeeID");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProjectID");

                    b.Property<DateTime>("DateTimeOfCreation")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeId", "ProjectId")
                        .HasName("PK_ProjectExecutors");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.ExecutingCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ExecutingCompanies");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerCompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CustomerCompanyID");

                    b.Property<DateTime>("DateTimeOfCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<long>("ExecutingCompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("ExecutingCompanyID");

                    b.Property<int>("ProjectLeaderId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectLeaderID");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProjectPriority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCompanyId");

                    b.HasIndex("ExecutingCompanyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.EmployeeProject", b =>
                {
                    b.HasOne("Sibers.DbStuff.Models.Employee", "Employee")
                        .WithMany("EmployeesProjects")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ProjectExecutors_Employees")
                        .IsRequired();

                    b.HasOne("Sibers.DbStuff.Models.Project", "Project")
                        .WithMany("EployeeProjects")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectExecutors_Projects")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.Project", b =>
                {
                    b.HasOne("Sibers.DbStuff.Models.CustomerCompany", "CustomerCompany")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerCompanyId")
                        .HasConstraintName("FK_Projects_CustomerCompanies")
                        .IsRequired();

                    b.HasOne("Sibers.DbStuff.Models.ExecutingCompany", "ExecutingCompany")
                        .WithMany("Projects")
                        .HasForeignKey("ExecutingCompanyId")
                        .HasConstraintName("FK_Projects_ExecutingCompanies")
                        .IsRequired();

                    b.Navigation("CustomerCompany");

                    b.Navigation("ExecutingCompany");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.CustomerCompany", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.Employee", b =>
                {
                    b.Navigation("EmployeesProjects");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.ExecutingCompany", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Sibers.DbStuff.Models.Project", b =>
                {
                    b.Navigation("EployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
